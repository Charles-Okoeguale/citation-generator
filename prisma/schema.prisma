generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String           @id @default(cuid())
  email       String           @unique
  name        String?
  password    String
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  citations   SavedCitation[]
  sessions    Session[]
  settings    UserSettings?
  preferences UserPreferences?
}

model SavedCitation {
  id           String   @id @default(cuid())
  userId       String
  title        String
  authors      String[]
  sourceType   String
  citationData Json
  style        String   @default("apa")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserSettings {
  id               String          @id @default(cuid())
  userId           String          @unique
  defaultStyle     String          @default("apa")
  theme            String          @default("light")
  citationsPerPage Int             @default(10)
  favoriteStyles   FavoriteStyle[] // Add this relation
  recentStyles     String[]        // Add this field
  user             User            @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserPreferences {
  id               String   @id @default(cuid())
  userId           String   @unique
  theme            String   @default("light")
  defaultStyle     String   @default("apa")
  citationsPerPage Int      @default(10)
  favoriteStyles   Json?    @default("[]") // Stored as JSON array
  recentStyles     String[] @default([])
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model FavoriteStyle {
  id         String       @id @default(cuid())
  styleId    String
  useCount   Int          @default(1)
  lastUsed   DateTime     @default(now())
  notes      String?
  settingsId String
  settings   UserSettings @relation(fields: [settingsId], references: [id], onDelete: Cascade)

  @@unique([settingsId, styleId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
